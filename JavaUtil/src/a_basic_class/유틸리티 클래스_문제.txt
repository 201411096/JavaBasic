1. 3
2. 2 -> 3
3. 3 -> 4
4. 3 -> 1 -> object의 requals 가 사용됨 (string의 equals는 인자가 string이 아니기때문에 사용되지 않음)
5. 1 -> 3
6. 3
7. 4
8. 1 -> 1,5
9. 2
10. 3
11. 2
12. 2
13.  -> 6
1. double형 변수 d의값보다 크지 않은 가장 가까운 정수를 얻을 수 있는 메소드는?

           (1)(int) Math.abs( d )                  (2)(int) Math.ceil( d )

           (3)(int) Math.floor( d )                 (4)(int) Math.round( d )

 

2. 다음 중에서 -4.0이출력되는 것은?

           (1)System.out.println( Math.floor( -4.6 ) );

           (2)System.out.println( Math.round( -4.5 ) );

           (3)System.out.println( Math.ceil( -4.5 ) );

           (4)System.out.println( Math.round( -4.6 ) );

 

3. 다음 문장의 결과는?

System.out.println( Math.floor(-5.8f ) );

           (1)-5                (2) -5.0              (3) -6                (4) -6.0 

 

4. 다음 프로그램의 결과는?

class Test  {

   public static void main ( String [] args ) {

       String  s = new String(“true”);

       Boolean b = new Boolean( true );

       if( s.equals( b )) System.out.println(“equals”);

   }

}

           (1)아무것도 출력되지 않는다                  (2)“equals”가 출력된다

           (3)컴파일 에러가 발생한다                     (4)예외가 발생한다.

 

5. 다음 프로그램의 결과는?

class Test  {

   public static void main ( String [] args ) {

       String  s = “자바에서”;

       s.substring(0,2);

       s.concat(“완성”);

       s+=”도전”;

       System.out.println(s);

   }

}

           (1)자바완성도전                        (2)자바에서완성도전

           (3)자바에서도전                        (4)자바에서

 

6. 다음 프로그램의 출력 결과는?

class Test  {

   public static void main ( String [] args ) {

       int result ;

       String s = “Java is excellent language”;

       result = s.indexOf(“e”);

       System.out.println( result );

   }

}

           (1)아무것도 출력되지 않는다                  (2)7

           (3)8                                                   (4)9

 

7. 문자열의 앞뒤에 있는 공백을 제거하는 메소드는?

           (1)append()                  (2) indexOf()                  (3) substring()                (4)trim()

 

8. 키와 값을 쌍으로 객체를 저장 관리하는 컬렉션 클래스나 인터페이스는?

           (1)Map                        (2) Set                          (3) List

           (4)SortedSet                 (5) SortedMap                (6) LinkedList

 

9. 저장되는 데이터의 중복을 허용하지 않으며, 순서를 정렬하거나 하지 않는 컬렉션은?

(1) Map             (2) Set              (3) List              (4)LinkedList

 

10. 중복이 가능하고 데이터 간에 순서가 있는 컬렉션은?

(1) Map             (2) Set              (3) List              (4)Enumeration

 

11. 데이터 간의 중복이 없고 정렬 기능을 갖는 인터페이스는?

(1) SortedMap                (2) SortedSet                 (3) List              (4) SortedList

 

12. 다음 프로그램의 출력 결과는?

import java.util.*;

class Test  {

   public static void main ( String [] args ) {

       ArrayList    list  = new ArrayList();

       list.add( new Integer( 4 ) );

list.add( new Integer( 1 ) );

list.add( new Integer( 3 ) );

list.add( new Integer( 2) );

       System.out.println( list );

 

       TreeSet  tree  = new  TreeSet(list);

       System.out.println( tree );

 

   }

}

           (1)[ 4, 1, 3, 2 ]

              [ 4, 1, 3, 2 ]

          

           (2)[ 4, 1, 3, 2 ]

              [ 1, 2, 3, 4 ]

          

           (3)[ 1, 2, 3, 4 ]

              [ 4, 1, 3, 2 ]

          

           (4)[ 1, 2, 3, 4 ]

              [ 1, 2, 3, 4 ]

          

 

13. 다음 프로그램의 출력 결과는?

class Test  {

   public static void main ( String [] args ) {

       String data = “no=12345&category=shoes&color=blue”;

       StringTokenizer st = new StringTokenizer( data, “&=”);

       System.out.println( st.countTokens() );

   }

}